{"ast":null,"code":"var _jsxFileName = \"/Users/jbarson/Projects/canvass/puppy/src/components/RecipeList.jsx\";\nimport React from 'react';\nimport PropTypes from \"prop-types\";\n\nclass RecipeList extends React.Component {\n  render() {\n    const {\n      error,\n      isLoaded,\n      items,\n      page\n    } = this.props;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"rounded-lg px-4 md:px-5 xl:px-4 py-3 md:py-4 xl:py-3 bg-blue-500 hover:bg-blue-600 md:text-lg xl:text-base text-white font-semibold leading-tight shadow-md mr-4\",\n        onClick: console.log,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Back\"), React.createElement(\"button\", {\n        className: \"rounded-lg px-4 md:px-5 xl:px-4 py-3 md:py-4 xl:py-3 bg-blue-500 hover:bg-blue-600 md:text-lg xl:text-base text-white font-semibold leading-tight shadow-md\",\n        onClick: console.log,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Forward\"), React.createElement(\"span\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Page \", page), React.createElement(\"div\", {\n        className: \"flex flex-wrap -mx-1 overflow-hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, items.map(item => React.createElement(\"div\", {\n        key: item.title,\n        className: \"my-1 p-4 w-full overflow-hidden md:w-1/2 lg:w-1/3 xl:w-1/4 border-solid border-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"text-2xl text-blue-500 hover:text-blue-700\",\n        href: item.href,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, item.title), React.createElement(\"div\", {\n        className: \"flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, [...new Set(item.ingredients.split(','))].map(ingredient => React.createElement(\"li\", {\n        className: \"\",\n        key: item.title + ingredient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, ingredient))), item.thumbnail && React.createElement(\"img\", {\n        className: \"h-24 w-half object-cover\",\n        src: item.thumbnail,\n        alt: item.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }))))));\n    }\n  }\n\n}\n\nRecipeList.propTypes = {\n  error: PropTypes.object,\n  isLoaded: PropTypes.bool,\n  items: PropTypes.array,\n  page: PropTypes.number\n};\nexport default RecipeList;","map":{"version":3,"sources":["/Users/jbarson/Projects/canvass/puppy/src/components/RecipeList.jsx"],"names":["React","PropTypes","RecipeList","Component","render","error","isLoaded","items","page","props","message","console","log","map","item","title","href","Set","ingredients","split","ingredient","thumbnail","propTypes","object","bool","array","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAQvCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA,KAAnB;AAA0BC,MAAAA;AAA1B,QAAmC,KAAKC,KAA9C;;AACA,QAAIJ,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACK,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACJ,QAAL,EAAe;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,kKAAlB;AAAqL,QAAA,OAAO,EAAEK,OAAO,CAACC,GAAtM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAQ,QAAA,SAAS,EAAC,6JAAlB;AAAgL,QAAA,OAAO,EAAED,OAAO,CAACC,GAAjM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoCJ,IAApC,CAHF,EAIE;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACM,GAAN,CAAUC,IAAI,IACb;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC,KAAf;AAAsB,QAAA,SAAS,EAAC,kFAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,4CAAb;AAA0D,QAAA,IAAI,EAAED,IAAI,CAACE,IAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4EF,IAAI,CAACC,KAAjF,CADF,EAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,CAAC,GAAG,IAAIE,GAAJ,CAAQH,IAAI,CAACI,WAAL,CAAiBC,KAAjB,CAAuB,GAAvB,CAAR,CAAJ,EAA0CN,GAA1C,CAA8CO,UAAU,IACvD;AAAK,QAAA,SAAS,EAAC,EAAf;AAAkB,QAAA,GAAG,EAAEN,IAAI,CAACC,KAAL,GAAWK,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+CA,UAA/C,CADD,CADD,CADA,EAMGN,IAAI,CAACO,SAAL,IACC;AAAK,QAAA,SAAS,EAAC,0BAAf;AAA0C,QAAA,GAAG,EAAEP,IAAI,CAACO,SAApD;AAA+D,QAAA,GAAG,EAAEP,IAAI,CAACC,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CAFF,CADD,CADH,CAJF,CADF;AAwBD;AACF;;AAxCsC;;AAAnCb,U,CACGoB,S,GAAY;AACjBjB,EAAAA,KAAK,EAAEJ,SAAS,CAACsB,MADA;AAEjBjB,EAAAA,QAAQ,EAAEL,SAAS,CAACuB,IAFH;AAGjBjB,EAAAA,KAAK,EAAEN,SAAS,CAACwB,KAHA;AAIjBjB,EAAAA,IAAI,EAAEP,SAAS,CAACyB;AAJC,C;AA0CrB,eAAexB,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\n\n\nclass RecipeList extends React.Component {\n  static propTypes = {\n    error: PropTypes.object,\n    isLoaded: PropTypes.bool,\n    items: PropTypes.array,\n    page: PropTypes.number,\n  };\n\n  render() {\n    const { error, isLoaded, items, page } = this.props;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <button className=\"rounded-lg px-4 md:px-5 xl:px-4 py-3 md:py-4 xl:py-3 bg-blue-500 hover:bg-blue-600 md:text-lg xl:text-base text-white font-semibold leading-tight shadow-md mr-4\" onClick={console.log}>Back</button>\n          <button className=\"rounded-lg px-4 md:px-5 xl:px-4 py-3 md:py-4 xl:py-3 bg-blue-500 hover:bg-blue-600 md:text-lg xl:text-base text-white font-semibold leading-tight shadow-md\" onClick={console.log}>Forward</button>\n          <span className=\"float-right\">Page {page}</span>\n          <div className=\"flex flex-wrap -mx-1 overflow-hidden\">\n            {items.map(item => (\n              <div key={item.title} className=\"my-1 p-4 w-full overflow-hidden md:w-1/2 lg:w-1/3 xl:w-1/4 border-solid border-2\">\n                <a className=\"text-2xl text-blue-500 hover:text-blue-700\" href={item.href}>{item.title}</a>\n                <div className=\"flex\">\n                <ul>\n                {[...new Set(item.ingredients.split(','))].map(ingredient => (\n                  <li  className=\"\" key={item.title+ingredient}>{ingredient}</li>\n                ))}\n                </ul>\n                  {item.thumbnail &&\n                    <img className=\"h-24 w-half object-cover\" src={item.thumbnail} alt={item.title} />\n                  }\n                  </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default RecipeList"]},"metadata":{},"sourceType":"module"}