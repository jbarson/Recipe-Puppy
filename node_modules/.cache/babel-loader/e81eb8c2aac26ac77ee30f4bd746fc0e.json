{"ast":null,"code":"var _jsxFileName = \"/Users/jbarson/Projects/canvass/puppy/src/components/RecipeList.jsx\";\nimport React from 'react';\n\nclass RecipeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      page: 1\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://www.recipepuppy.com/api/?i=onions,garlic&q=omelet&p=${this.state.page}`).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.results\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"rounded-lg px-4 md:px-5 xl:px-4 py-3 md:py-4 xl:py-3 bg-blue-500 hover:bg-blue-600 md:text-lg xl:text-base text-white font-semibold leading-tight shadow-md mx-4\",\n        onClick: console.log,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Forward\"), React.createElement(\"button\", {\n        className: \"rounded-lg px-4 md:px-5 xl:px-4 py-3 md:py-4 xl:py-3 bg-blue-500 hover:bg-blue-600 md:text-lg xl:text-base text-white font-semibold leading-tight shadow-md mx-4\",\n        onClick: console.log,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Back\"), React.createElement(\"div\", {\n        className: \"flex flex-wrap -mx-1 overflow-hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, items.map(item => React.createElement(\"div\", {\n        key: item.title,\n        className: \"my-1 px-1 w-full overflow-hidden md:w-1/2 lg:w-1/3 xl:w-1/4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: item.href,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, item.title), item.thumbnail && React.createElement(\"img\", {\n        src: item.thumbnail,\n        alt: item.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, [...new Set(item.ingredients.split(','))].map(ingredient => React.createElement(\"li\", {\n        key: item.title + ingredient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, ingredient)))))));\n    }\n  }\n\n}\n\nexport default RecipeList;","map":{"version":3,"sources":["/Users/jbarson/Projects/canvass/puppy/src/components/RecipeList.jsx"],"names":["React","RecipeList","Component","constructor","props","state","error","isLoaded","items","page","componentDidMount","fetch","then","res","json","result","setState","results","render","message","console","log","map","item","title","href","thumbnail","Set","ingredients","split","ingredient"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,IAAI,EAAE;AAJK,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAE,8DAA6D,KAAKN,KAAL,CAAWI,IAAK,EAA/E,CAAL,CACGG,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZT,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEO,MAAM,CAACE;AAFF,OAAd;AAID,KARL,EASKX,KAAD,IAAW;AACT,WAAKU,QAAL,CAAc;AACZT,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAdL;AAgBD;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACa,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACZ,QAAL,EAAe;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,kKAAlB;AAAqL,QAAA,OAAO,EAAEa,OAAO,CAACC,GAAtM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAQ,QAAA,SAAS,EAAC,kKAAlB;AAAqL,QAAA,OAAO,EAAED,OAAO,CAACC,GAAtM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGb,KAAK,CAACc,GAAN,CAAUC,IAAI,IACb;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC,KAAf;AAAsB,QAAA,SAAS,EAAC,6DAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAED,IAAI,CAACE,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBF,IAAI,CAACC,KAA1B,CADF,EAEGD,IAAI,CAACG,SAAL,IACC;AAAK,QAAA,GAAG,EAAEH,IAAI,CAACG,SAAf;AAA0B,QAAA,GAAG,EAAEH,IAAI,CAACC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,CAAC,GAAG,IAAIG,GAAJ,CAAQJ,IAAI,CAACK,WAAL,CAAiBC,KAAjB,CAAuB,GAAvB,CAAR,CAAJ,EAA0CP,GAA1C,CAA8CQ,UAAU,IACvD;AAAI,QAAA,GAAG,EAAEP,IAAI,CAACC,KAAL,GAAWM,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCA,UAAjC,CADD,CADD,CALF,CADD,CADH,CAHF,CADF;AAqBD;AACF;;AA3DsC;;AA8DzC,eAAe7B,UAAf","sourcesContent":["import React from 'react';\n\nclass RecipeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      page: 1,\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://www.recipepuppy.com/api/?i=onions,garlic&q=omelet&p=${this.state.page}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.results\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <button className=\"rounded-lg px-4 md:px-5 xl:px-4 py-3 md:py-4 xl:py-3 bg-blue-500 hover:bg-blue-600 md:text-lg xl:text-base text-white font-semibold leading-tight shadow-md mx-4\" onClick={console.log}>Forward</button>\n          <button className=\"rounded-lg px-4 md:px-5 xl:px-4 py-3 md:py-4 xl:py-3 bg-blue-500 hover:bg-blue-600 md:text-lg xl:text-base text-white font-semibold leading-tight shadow-md mx-4\" onClick={console.log}>Back</button>\n          <div className=\"flex flex-wrap -mx-1 overflow-hidden\">\n            {items.map(item => (\n              <div key={item.title} className=\"my-1 px-1 w-full overflow-hidden md:w-1/2 lg:w-1/3 xl:w-1/4\">\n                <a href={item.href}>{item.title}</a>\n                {item.thumbnail &&\n                  <img src={item.thumbnail} alt={item.title}/>\n                }\n                <ul>\n                {[...new Set(item.ingredients.split(','))].map(ingredient => (\n                  <li key={item.title+ingredient}>{ingredient}</li>\n                ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default RecipeList"]},"metadata":{},"sourceType":"module"}